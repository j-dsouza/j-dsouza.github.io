<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>James D'Souza</title><link>https://j-dsouza.github.io/</link><description>Recent content on James D'Souza</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 08 Jan 2022 10:15:19 +0000</lastBuildDate><atom:link href="https://j-dsouza.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Assembly</title><link>https://j-dsouza.github.io/posts/2022-01-advent-of-code-assembly/</link><pubDate>Sat, 08 Jan 2022 10:15:19 +0000</pubDate><guid>https://j-dsouza.github.io/posts/2022-01-advent-of-code-assembly/</guid><description>What&amp;rsquo;s the goal? In early January, a friend messaged saying that he was doing Day 1 of Advent of Code in Assembly Code, and it was a really interesting challenge. As someone who has never touched Assembly Code, I naively thought how hard can it be?, and decided to join him.
I&amp;rsquo;m running this on an ARM Macbook, so this post relates to my experiences with that architecture. Working with an Intel instruction set will vary, but the most of the ideas should be relatively transferrable as I&amp;rsquo;m not using any complex instructions here.</description></item></channel></rss>